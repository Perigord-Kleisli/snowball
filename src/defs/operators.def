
#ifndef OPERATOR
#error OPERATOR needs to be defined!
#define OPERATOR(o, n, s, p) // For linting
#endif

OPERATOR(EQ,             0, "Eq",        "operator ="        )
OPERATOR(EQEQ,           1, "DbEq",      "operator =="       )
OPERATOR(PLUS,           2, "Pl",        "operator +"        )
OPERATOR(PLUSEQ,         3, "PlEq",      "operator +="       )
OPERATOR(MINUS,          4, "Mn",        "operator -"        )
OPERATOR(UPLUS,          5, "Up",        "operator(unary) +" )
OPERATOR(UMINUS,         6, "Um",        "operator(unary) -" )
OPERATOR(MINUSEQ,        7, "MnEq",      "operator -="       )
OPERATOR(MUL,            8, "Ml",        "operator *"        )
OPERATOR(MULEQ,          9, "MlEq",      "operator *="       )
OPERATOR(DIV,           10, "Di",        "operator / "       )
OPERATOR(DIVEQ,         11, "DiEq",      "operator /="       )
OPERATOR(MOD,           12, "Md",        "operator %"        )
OPERATOR(MOD_EQ,        13, "MdEq",      "operator %="       )
OPERATOR(LT,            14, "Lt",        "operator <"        )
OPERATOR(LTEQ,          15, "LtEq",      "operator <="       )
OPERATOR(GT,            16, "Gt",        "operator >"        )
OPERATOR(GTEQ,          17, "GtEq",      "operator >="       )
OPERATOR(AND,           18, "An",        "operator &&"       )
OPERATOR(OR,            19, "O",         "operator ||"       )
OPERATOR(NOT,           20, "Nt",        "operator !"        )
OPERATOR(NOTEQ,         21, "NtE",       "operator !="       )
OPERATOR(BIT_NOT,       22, "BNt",       "operator ~"        )
OPERATOR(BIT_LSHIFT,    23, "BLsShft",   "operator <<"       )
OPERATOR(BIT_LSHIFT_EQ, 24, "BLsShftEq", "operator <<="      )
OPERATOR(BIT_RSHIFT,    25, "BRshft",    "operator >>"       )
OPERATOR(BIT_RSHIFT_EQ, 26, "BRshftEq",  "operator >>="      )
OPERATOR(BIT_OR,        27, "BOr",       "operator |"        )
OPERATOR(BIT_OR_EQ,     28, "BOrEq",     "operator |="       )
OPERATOR(BIT_AND,       29, "BAnd",      "operator &"        )
OPERATOR(BIT_AND_EQ,    30, "BAndEq",    "operator &="       )
OPERATOR(BIT_XOR,       31, "BXor",      "operator ^"        )
OPERATOR(BIT_XOR_EQ,    32, "BXorEq",    "operator ^="       )
OPERATOR(CONSTRUCTOR,   33, "NwC",       "constructor"       )
OPERATOR(DESTRUCTOR,    34, "Dle",       "destructor"        )
OPERATOR(CALL,          35, "Cll",       "operator ()"       )
OPERATOR(STRING,        36, "StrC",      "String conversion" )
OPERATOR(BOOL,          37, "BlC",       "Boolean conversion")
