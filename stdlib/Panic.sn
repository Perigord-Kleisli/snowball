@use_macro(current_location);
import Core::SourceLocation;
import Core::System;

/**
 * @brief Emits a panic message and exits the program.
 *
 * The `panic` function is used to emit an error message and terminate the program. It is often used to
 * handle critical errors or unexpected situations in the program. The function prints an error message
 * along with source code location information and exits the program.
 *
 * @param message The error message to emit.
 * @param _location The source code location information (default is the current location).
 *
 * @remarks
 * The function prints the error message, source file, line number, and column number where the panic occurred.
 * To enable backtrace information, it suggests running the program with the `SN_BACKTRACE=1` environment variable.
 */
@inline
public func panic(
  message: String = "Something went wrong! üê±", 
  _location: SourceLocation::SourceLocation = current_location!()
) {
  System::println("\n\n--------------------");
  System::println("Program panicked with message: " + message)
  System::println(" at " + _location.file() + "\e[1;37m:" + _location.line() + ":" + _location.column() + "\e[0m");
  System::println("\e[1;37mnote:\e[0m run with \e[1;37m`SN_BACKTRACE=1`\e[0m environment variable to get a backtrace\n");
  System::exit(127);
}

/**
 * @brief It is used to mark unreachable code.
 * 
 * The `unreachable` macro is used to mark code that is unreachable. It is often used to mark code that should
 * never be reached. If the code is reached, the program will panic with the specified message.
 * 
 * This is useful any time that the compiler can't determine that some code is unreachable. For example:
 *  - Match arms with guard conditions.
 *  - Loops that dynamically terminate.
 *  - Iterators that dynamically terminate.
 * 
 * @param message The message to display if the code is reached.
 * @remarks The `unreachable` macro is a no-op in release builds.
 */
@export
macro unreachable(message: const[str] = "Unexpectedly reached unreachable code.") {
  pkg!(panic("internal error: entered unreachable code"));
}
