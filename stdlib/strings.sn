/**
 * @brief A constant representing all ASCII letters, both lowercase and uppercase.
 * The string includes the characters 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.
 * This constant is useful for tasks involving case-insensitive character comparisons and manipulations.
 */
public const ascii_letters: String = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

/**
 * @brief A constant representing all lowercase ASCII letters.
 * The string includes the characters 'abcdefghijklmnopqrstuvwxyz'.
 * This constant is valuable for operations requiring case-sensitive manipulation of lowercase letters.
 */
public const ascii_lowercase: String = "abcdefghijklmnopqrstuvwxyz";

/**
 * @brief A constant representing all uppercase ASCII letters.
 * The string includes the characters 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.
 * This constant is beneficial for operations requiring case-sensitive manipulation of uppercase letters.
 */
public const ascii_uppercase: String = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";

/**
 * @brief A constant representing all decimal digits (0-9).
 * The string includes the characters '0123456789'.
 * This constant is commonly used in tasks involving numeric operations and digit-related processing.
 */
public const digits: String = "0123456789";

/**
 * @brief A constant representing all hexadecimal digits (0-9, a-f, A-F).
 * The string includes the characters '0123456789abcdefABCDEF'.
 * This constant is valuable for tasks involving hexadecimal representation and manipulation.
 */
public const hexdigits: String = "0123456789abcdefABCDEF";

/**
 * @brief A constant representing all octal digits (0-7).
 * The string includes the characters '01234567'.
 * This constant is useful in scenarios requiring octal representation and processing.
 */
public const octdigits: String = "01234567";

/**
 * @brief A constant representing ASCII punctuation characters.
 * The string includes the characters '!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~'.
 * This constant is handy for tasks involving punctuation handling and filtering.
 */
public const punctuation: String = "!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~";

/**
 * @brief A constant representing all printable ASCII characters, including digits, letters, and punctuation.
 * The string includes the characters '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
 * !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~'.
 * This constant is useful for tasks where a comprehensive set of printable characters is required.
 * @note It does not include whitespace characters. For a string containing all printable characters, including whitespace, use `strings::printable`.
 */
public const printable: String = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~";

/**
 * @brief A constant representing ASCII whitespace characters, including space, tab, newline, carriage return, vertical tab, and form feed.
 * The string includes the characters ' \t\n\r\x0b\x0c'.2
 * This constant is beneficial for tasks involving whitespace detection, removal, or manipulation.
 */
public const whitespace: String = " \t\n\r\x0b\x0c";
