class [[extends]] char {
  pub:
    /**
    * @brief It creates a `+` operator for the character.
    * @param[in] other The character to concatenate the character with.
    * @return The addition result.
    */
    operator [[inline, llvm_function]] +(other: i32) &char 
    { 
      %0 = getelementptr i8, ptr %self, i32 %other
      ret ptr %0
    }

    /**
     * @brief It creates an index operator for the character.
     * @param[in] index The index of the character to get.
     * @return The character at the specified index.
     */
    operator [[inline, llvm_function]] [](index: i32) char
    { 
      %0 = getelementptr i8, ptr %self, i32 %index
      %1 = load i8, ptr %0, align 1
      ret i8 %1
    }

    /**
     * @brief It creates an index operator for the character.
     * @param[in] index The index of the character to get.
     * @return The character at the specified index.
     */
    fn [[inline, llvm_function]] at(index: i32) &char
    { 
      %0 = getelementptr ptr, ptr %self, i32 %index
      %1 = load ptr, ptr %0, align 1
      ret ptr %1
    }

    operator [[__internal__, __no_pointer_self__]] +(other: char)  char {}
    operator [[__internal__, __no_pointer_self__]] -(other: char)  char {}
    operator [[__internal__, __no_pointer_self__]] *(other: char)  char {}
    operator [[__internal__, __no_pointer_self__]] /(other: char)  f32 {}
    operator [[__internal__, __no_pointer_self__]] %(other: char)  f32 {}
    operator [[__internal__, __no_pointer_self__]] ^(other: char)  char {}
    operator [[__internal__, __no_pointer_self__]] |(other: char)  char {}
    operator [[__internal__, __no_pointer_self__]] &(other: char)  char {}
    operator [[__internal__, __no_pointer_self__]] <<(other: char) char {}
    operator [[__internal__, __no_pointer_self__]] <(other: char)  bool {}
    operator [[__internal__, __no_pointer_self__]] >(other: char)  bool {}
    operator [[__internal__, __no_pointer_self__]] <=(other: char) bool {}
    operator [[__internal__, __no_pointer_self__]] >=(other: char) bool {}
    operator [[__internal__, __no_pointer_self__]] ==(other: char) bool {}
    operator [[__internal__, __no_pointer_self__]] !=(other: char) bool {}
    operator [[__internal__, __no_pointer_self__]] -()             char {}
    operator [[__internal__, __no_pointer_self__]] +=(other: char) char {}
    operator [[__internal__, __no_pointer_self__]] -=(other: char) char {}
    operator [[__internal__, __no_pointer_self__]] *=(other: char) char {}
    operator [[__internal__, __no_pointer_self__]] /=(other: char) char {}
    operator [[__internal__, __no_pointer_self__]] %=(other: char) char {}
    operator [[__internal__, __no_pointer_self__]] ^=(other: char) char {}
    operator [[__internal__, __no_pointer_self__]] |=(other: char) char {}
    operator [[__internal__, __no_pointer_self__]] &=(other: char) char {}
    operator [[__internal__, __no_pointer_self__]] <<=(other: char)char {}
    operator [[__internal__, __no_pointer_self__]] >>=(other: char)char {}
    operator [[__internal__, __no_pointer_self__]] =(other: char)  char {}
    operator [[__internal__, __no_pointer_self__]] !=(other: char) char {}
    operator [[__internal__, __no_pointer_self__]] !()             bool {}
    operator [[__internal__, __no_pointer_self__]] ||(other: char) bool {}
    operator [[__internal__, __no_pointer_self__]] &&(other: char) bool {}

    // override with &char
    operator [[__internal__, __no_pointer_self__]] =(other: &char) &char {}
    operator [[__internal__]] =(other: char)            &char {}
    operator [[__internal__]] =(other: &char)           &char {}
    operator [[__internal__]] !()                       bool {}
}

class [[extends]] i8 {
  pub:

    operator [[__internal__]] =(other: &i8) &i8 {}
    operator [[__internal__]] =(other: i8) &i8 {}
    
    operator [[__internal__, __no_pointer_self__]] +(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] -(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] *(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] /(other: i8) f32 {}
    operator [[__internal__, __no_pointer_self__]] /(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] %(other: i8) f32 {}
    operator [[__internal__, __no_pointer_self__]] ^(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] |(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] &(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] <<(other: i8) i8 {}
    //operator [[__internal__, __no_pointer_self__]] >>(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] <(other: i8) bool {}
    operator [[__internal__, __no_pointer_self__]] >(other: i8) bool {}
    operator [[__internal__, __no_pointer_self__]] <=(other: i8) bool {}
    operator [[__internal__, __no_pointer_self__]] >=(other: i8) bool {}
    operator [[__internal__, __no_pointer_self__]] ==(other: i8) bool {}
    operator [[__internal__, __no_pointer_self__]] !=(other: i8) bool {}
    operator [[__internal__, __no_pointer_self__]] -() i8 {}
    //operator [[__internal__, __no_pointer_self__]] ++() i8 {}
    //operator [[__internal__, __no_pointer_self__]] --() i8 {}
    operator [[__internal__, __no_pointer_self__]] +=(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] -=(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] *=(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] /=(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] %=(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] ^=(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] |=(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] &=(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] <<=(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] >>=(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] =(other: i8) i8 {}
    operator [[__internal__, __no_pointer_self__]] !() bool {}
    operator [[__internal__, __no_pointer_self__]] ||(other: i8) bool {}
    operator [[__internal__, __no_pointer_self__]] &&(other: i8) bool {}
}

class [[extends]] i16 {
  pub:
    operator [[__internal__, __no_pointer_self__]] +(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] -(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] *(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] /(other: i16) f32 {}
    operator [[__internal__, __no_pointer_self__]] /(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] %(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] ^(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] |(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] &(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] <<(other: i16) i16 {}
    //operator [[__internal__, __no_pointer_self__]] >>(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] <(other: i16) bool {}
    operator [[__internal__, __no_pointer_self__]] >(other: i16) bool {}
    operator [[__internal__, __no_pointer_self__]] <=(other: i16) bool {}
    operator [[__internal__, __no_pointer_self__]] >=(other: i16) bool {}
    operator [[__internal__, __no_pointer_self__]] ==(other: i16) bool {}
    operator [[__internal__, __no_pointer_self__]] !=(other: i16) bool {}
    operator [[__internal__, __no_pointer_self__]] -() i16 {}
    //operator [[__internal__, __no_pointer_self__]] ++() i16 {}
    //operator [[__internal__, __no_pointer_self__]] --() i16 {}
    operator [[__internal__, __no_pointer_self__]] +=(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] -=(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] *=(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] /=(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] %=(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] ^=(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] |=(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] &=(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] <<=(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] >>=(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] =(other: i16) i16 {}
    operator [[__internal__, __no_pointer_self__]] !() bool {}
    operator [[__internal__, __no_pointer_self__]] ||(other: i16) bool {}
    operator [[__internal__, __no_pointer_self__]] &&(other: i16) bool {}

    operator [[__internal__]] =(other: &i16) &i16 {}
    operator [[__internal__]] =(other: i16) &i16 {}
}

class [[extends]] i32 {
  pub:
    operator [[__internal__, __no_pointer_self__]] +(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] -(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] *(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] /(other: i32) f32 {}
    operator [[__internal__, __no_pointer_self__]] /(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] %(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] ^(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] |(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] &(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] <<(other: i32) i32 {}
    //operator [[__internal__, __no_pointer_self__]] >>(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] <(other: i32) bool {}
    operator [[__internal__, __no_pointer_self__]] >(other: i32) bool {}
    operator [[__internal__, __no_pointer_self__]] <=(other: i32) bool {}
    operator [[__internal__, __no_pointer_self__]] >=(other: i32) bool {}
    operator [[__internal__, __no_pointer_self__]] ==(other: i32) bool {}
    operator [[__internal__, __no_pointer_self__]] !=(other: i32) bool {}
    operator [[__internal__, __no_pointer_self__]] -() i32 {}
    //operator [[__internal__, __no_pointer_self__]] ++() i32 {}
    //operator [[__internal__, __no_pointer_self__]] --() i32 {}
    operator [[__internal__, __no_pointer_self__]] +=(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] -=(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] *=(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] /=(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] %=(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] ^=(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] |=(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] &=(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] <<=(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] >>=(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] =(other: i32) i32 {}
    operator [[__internal__, __no_pointer_self__]] !() bool {}
    operator [[__internal__, __no_pointer_self__]] ||(other: i32) bool {}
    operator [[__internal__, __no_pointer_self__]] &&(other: i32) bool {}

    operator [[__internal__]] =(other: &i32) &i32 {}
    operator [[__internal__]] =(other: i32) &i32 {}
}

class [[extends]] i64 {
  pub:
    // override with &i64
    operator [[__internal__, __no_pointer_self__]] =(other: &i64) &i64 {}
    operator [[__internal__]] =(other: i64) &i64 {}

    operator [[__internal__, __no_pointer_self__]] +(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] -(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] *(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] /(other: i64) f32 {}
    operator [[__internal__, __no_pointer_self__]] /(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] %(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] ^(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] |(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] &(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] <<(other: i64) i64 {}
    //operator [[__internal__, __no_pointer_self__]] >>(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] <(other: i64) bool {}
    operator [[__internal__, __no_pointer_self__]] >(other: i64) bool {}
    operator [[__internal__, __no_pointer_self__]] <=(other: i64) bool {}
    operator [[__internal__, __no_pointer_self__]] >=(other: i64) bool {}
    operator [[__internal__, __no_pointer_self__]] ==(other: i64) bool {}
    operator [[__internal__, __no_pointer_self__]] !=(other: i64) bool {}
    operator [[__internal__, __no_pointer_self__]] -() i64 {}
    //operator [[__internal__, __no_pointer_self__]] ++() i64 {}
    //operator [[__internal__, __no_pointer_self__]] --() i64 {}
    operator [[__internal__, __no_pointer_self__]] +=(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] -=(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] *=(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] /=(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] %=(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] ^=(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] |=(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] &=(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] <<=(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] >>=(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] =(other: i64) i64 {}
    operator [[__internal__, __no_pointer_self__]] !() bool {}
    operator [[__internal__, __no_pointer_self__]] ||(other: i64) bool {}
    operator [[__internal__, __no_pointer_self__]] &&(other: i64) bool {}

    operator [[__internal__]] =(other: &i64) &i64 {}
    operator [[__internal__]] =(other: i64) &i64 {}
}

class [[extends]] f32 {
  pub:
    // override with &f32
    operator [[__internal__, __no_pointer_self__]] =(other: &f32) &f32 {}
    operator [[__internal__]] =(other: f32) &f32 {}

    operator [[__internal__, __no_pointer_self__]] +(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] -(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] *(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] /(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] %(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] ^(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] |(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] &(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] <<(other: f32) f32 {}
    //operator [[__internal__, __no_pointer_self__]] >>(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] <(other: f32) bool {}
    operator [[__internal__, __no_pointer_self__]] >(other: f32) bool {}
    operator [[__internal__, __no_pointer_self__]] <=(other: f32) bool {}
    operator [[__internal__, __no_pointer_self__]] >=(other: f32) bool {}
    operator [[__internal__, __no_pointer_self__]] ==(other: f32) bool {}
    operator [[__internal__, __no_pointer_self__]] !=(other: f32) bool {}
    operator [[__internal__, __no_pointer_self__]] -() f32 {}
    //operator [[__internal__, __no_pointer_self__]] ++() f32 {}
    //operator [[__internal__, __no_pointer_self__]] --() f32 {}
    operator [[__internal__, __no_pointer_self__]] +=(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] -=(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] *=(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] /=(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] %=(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] ^=(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] |=(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] &=(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] <<=(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] >>=(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] =(other: f32) f32 {}
    operator [[__internal__, __no_pointer_self__]] !() bool {}
    operator [[__internal__, __no_pointer_self__]] ||(other: f32) bool {}
    operator [[__internal__, __no_pointer_self__]] &&(other: f32) bool {}

    operator [[__internal__]] =(other: &f32) &f32 {}
    operator [[__internal__]] =(other: f32) &f32 {}
}

class [[extends]] f64 {
  pub:
    // override with &f64
    operator [[__internal__, __no_pointer_self__]] =(other: &f64) &f64 {}
    operator [[__internal__]] =(other: f64) &f64 {}

    operator [[__internal__, __no_pointer_self__]] +(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] -(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] *(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] /(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] %(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] ^(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] |(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] &(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] <<(other: f64) f64 {}
    //operator [[__internal__, __no_pointer_self__]] >>(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] <(other: f64) bool {}
    operator [[__internal__, __no_pointer_self__]] >(other: f64) bool {}
    operator [[__internal__, __no_pointer_self__]] <=(other: f64) bool {}
    operator [[__internal__, __no_pointer_self__]] >=(other: f64) bool {}
    operator [[__internal__, __no_pointer_self__]] ==(other: f64) bool {}
    operator [[__internal__, __no_pointer_self__]] !=(other: f64) bool {}
    operator [[__internal__, __no_pointer_self__]] -() f64 {}
    //operator [[__internal__, __no_pointer_self__]] ++() f64 {}
    //operator [[__internal__, __no_pointer_self__]] --() f64 {}
    operator [[__internal__, __no_pointer_self__]] +=(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] -=(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] *=(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] /=(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] %=(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] ^=(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] |=(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] &=(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] <<=(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] >>=(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] =(other: f64) f64 {}
    operator [[__internal__, __no_pointer_self__]] !() bool {}
    operator [[__internal__, __no_pointer_self__]] ||(other: f64) bool {}
    operator [[__internal__, __no_pointer_self__]] &&(other: f64) bool {}

    operator [[__internal__]] =(other: &f64) &f64 {}
    operator [[__internal__]] =(other: f64) &f64 {}
}

class [[extends]] bool {
  pub:
    // override with &bool
    operator [[__internal__, __no_pointer_self__]] =(other: &bool) &bool {}
    operator [[__internal__]] =(other: bool) &bool {}

    operator [[__internal__, __no_pointer_self__]] +(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] -(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] *(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] /(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] %(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] ^(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] |(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] &(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] <<(other: bool) bool {}
    //operator [[__internal__, __no_pointer_self__]] >>(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] <(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] >(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] <=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] >=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] ==(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] !=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] -() bool {}
    //operator [[__internal__, __no_pointer_self__]] ++() bool {}
    //operator [[__internal__, __no_pointer_self__]] --() bool {}
    operator [[__internal__, __no_pointer_self__]] +=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] -=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] *=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] /=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] %=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] ^=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] |=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] &=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] <<=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] >>=(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] =(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] !() bool {}
    operator [[__internal__, __no_pointer_self__]] ||(other: bool) bool {}
    operator [[__internal__, __no_pointer_self__]] &&(other: bool) bool {}

    operator [[__internal__]] =(other: &bool) &bool {}
    operator [[__internal__]] =(other: bool) &bool {}
}

class [[__internal__]] *const <T> {
  pub:
    unsafe operator [[inline, first_arg_is_self, llvm_function]] +(self: *const T, other: i32) *const T
    { 
      %0 = getelementptr ptr, ptr %self, i32 %other
      ret ptr %0
    } 

    unsafe fn [[inline, first_arg_is_self, llvm_function]] as_ref<>(self: *const T) &T 
    {
      ret ptr %self
    }

    operator [[__internal__, first_arg_is_self]] =(self: *const T, other: *const T) *const T {}

    fn [[inline, first_arg_is_self, llvm_function]] is_null(self: *const T) bool
    {
      %0 = icmp eq ptr %self, null
      ret i1 %0
    }
}
