use Core::CLib;

/**
 * @brief Causes the program to terminate with the specified exit code.
 *
 * @param exitCode The exit status of the program.
 * @note The behavior is undefined if a program calls exit more than once.
 */
pub static fn exit(exitCode: i32 = 0) { CLib::exit(exitCode); }
/**
 * Prints @arg msg to standard output.
 *
 * @param msg the 64-bit integer value to print
 * @return the number of characters printed
 */
pub static fn [[inline]] print<T>(msg: T, end: &char = "") i32 { 
    let m = String::from(msg).c_str();
    return CLib::printf("%s%s", m, end); 
}
/**
 * Prints @arg msg to standard output with a new
 * line appended to the end.
 *
 * @param msg the 64-bit integer value to print
 * @return the number of characters printed
 */
pub static fn [[inline]] println<T>(msg: T) i32 
    { return print(msg, "\n"); }
/**
 * @brief Prints a new line character to standard output.
 *
 * This function is a utility for printing a new line character to standard output.
 * It can be used to separate output on the terminal or console and improve readability.
 *
 * @note This function does not print any other characters besides the new line character.
 * If you need to print additional characters or a string, use the `println(...)` function instead.
 */
pub static fn println() { CLib::putchar('\n'); }
