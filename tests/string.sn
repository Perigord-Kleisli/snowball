import std::io;

namespace tests {

@test
func empty() i32 {
    let s = new String();
    return s.size() == 0;
}

@test(expect = 5)
func size_char() i32 {
    let s = String::from(b"hello", 5);
    return s.size();
}

@test
func equals() i32 {
    let s = "hello";
    return s == "hello";
}

@test
func not_equals() i32 {
    let s = "hello"
    return s != "world";
}

@test
func concat() i32 {
    let mut s = "hello";
    s = s + " world";
    return s == "hello world";
}

@test(expect = 5)
func size() i32 {
    let s = "hello";
    return s.size();
}

@test()
func index() i32 {
    let mut s = "hello";
    return s[0] == 'h' && s[1] == 'e' && s[2] == 'l' && s[3] == 'l' && s[4] == 'o';
}

@test()
func substring() i32 {
    let s = "hello";
    return s.substr(0..2) == "he";
}

@test()
func substring_negative() i32 {
    let s = "hello";
    return s.substr((-2)..(-1)) == "l";
}

@test()
func rjust() i32 {
    let s = "hello";
    return s.rjust(10, ' ') == "     hello";
}

@test()
func ljust() i32 {
    let s = "hello";
    return s.ljust(10, '-') == "hello-----";
}

}
