import[[use_macro]] Core::Assert;
import Core::System;

namespace tests {

func [[test]] empty() i32 {
    let v = new Vector<i32>();
    return v.size() == 0;
}

func [[test(expect = 5)]] push() i32 {
    let mut v = new Vector<i32>();
    let mut i = 0;
    while (i < 5) {
        v.push(i);
        i = i + 1;
    }
    return v.size();
}

func [[test(expect = 20)]] insert() i32 {
    let mut v = new Vector<i32>();
    v.insert(1, 5);
    v.insert(1, 10);
    v.insert(1, 20);
    @assert(v.size() == 3);
    return v.at(1);
}

func [[test(skip)]] to_string() i32 {
    let mut v = new Vector<i32>();
    v.push(1);
    v.push(2);
    v.push(3);
    // TODO: i32.to_string() is not implemented
    //return v.to_string() == "[1, 2, 3]";
}

func [[test(expect = 5)]] change_value() i32 {
    let mut v = new Vector<i32>();
    v.push(1);
    v[0] = 5;
    return v[0];
}

}
