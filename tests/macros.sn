macro outside() {
    return 1;
}

namespace tests {

macro inline_statement() {
    return 1;
}

@test
func inline_statement() i32 {
    inline_statement!();
}

macro argument(x: const[num]) {
    return #x;
}

@test
func argument() i32 {
    argument!(1);
}

macro default_arg(x: const[num] = 1) {
    return #x;
}

@test
func default_arg() i32 {
    default_arg!();
}

macro macro_scope_access() {
    let x = 1;
}

@test
func macro_scope_access() i32 {
    macro_scope_access!();
    return x;
}

@test
func outside() i32 {
    outside!();
}

@test(expect = 5)
func include_str() i32 {
    let x = include_str!("assets/macros_test.txt");
    return x.size();
}

@test(expect = 5, skip)
func env() i32 {
    // Still don't know how we could test this, use HOME maybe?
//    let x = env!("TEST_ENV");
//    return x.size();
}

}
