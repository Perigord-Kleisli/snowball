use Core::System

class Hello {
pub:
    let h: String;

    Hello(x: i32) {
        System::println(self.h)
    }

// priv:
    static fn hello() {
        System::println("hello")
    }

    fn hey() {
        System::println("hey")
    }

    operator +() {

    }
}

fn [[llvm_function]] h(d: String) i32 {
    %1 = alloca i8*, align 8
    store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %1, align 8
    ret i32 123
}

fn awd<T>(a: T) {

}

fn b() {

}

pub fn main() i32 {
    // let a = new Hello(2)
    // let b: i32;

    // // {
    // //     b = 2
    // // }

    // // c(b)
    // Hello::hello()
    let b = 2
    let c = 512.123 + b

    System::println("hey")
    System::println(c)

    awd(b)
}