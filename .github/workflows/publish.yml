name: Build and Release
on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.distro }}
    strategy:
      matrix:
        distro: [ubuntu-20.04]
        arch: [x86_64, amd64, arm32v7, arm64v8, ppc64le, s390x]
        include:
          - arch: x86_64
            platform: linux/amd64
          - arch: amd64
            platform: linux/amd64
          - arch: arm32v7
            platform: linux/arm/v7
          - arch: arm64v8
            platform: linux/arm64/v8
          - arch: ppc64le
            platform: linux/ppc64le
          - arch: s390x
            platform: linux/s390x
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build docker
        run: |
          docker build --rm --platform=${{ matrix.platform }} -t myproject:${{ matrix.arch }} \
            --build-arg BUILDPLATFORM=${{ matrix.platform }} \
            --build-arg ARCH=${{ matrix.arch == 'x86_64' && 'ubuntu' || '{{ matrix.arch }}/ubuntu' }} .

      - name: Copy binaries
        uses: docker://docker
        with:
          args: cp myproject:${{ matrix.arch }}/app/bin bin/

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Move files to release
        run: |
          mv libSnowballRuntime.so ./bin/Release/
          mv libSnowball.so ./bin/Release/
      - name: Archive
        run: |
          mkdir release
          mkdir -p release/bin
          cp -a ./bin/Release/. release/
          mv release/snowball release/bin/snowball
          cp -R ./stdlib release/libs
          tar -czvf snowball.tar.gz release/
      - name: Upload Release Asset
        if: success()
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./snowball.tar.gz
          asset_name: snowball-${{ matrix.distro == 'ubuntu-latest' && 'linux' || 'darwin' }}-${{ matrix.manylinux-type-target }}.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
