name: Build and Release

on:
  pull_request:
    branches:
      - releases
    types: [closed]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        cmake: [3.10, 3.11, 3.12]
        distro: [ubuntu:20.04, ubuntu:18.04, debian:11, debian:10, centos:8, centos:7, fedora:34, fedora:33]
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        if [ "$OSTYPE" = "linux-gnu" ]; then
          if [ "${{ matrix.distro }}" = "ubuntu:20.04" ] || [ "${{ matrix.distro }}" = "ubuntu:18.04" ]; then
            sudo apt-get update
            sudo apt-get install -y cmake build-essential llvm-14-dev
          elif [ "${{ matrix.distro }}" = "debian:11" ] || [ "${{ matrix.distro }}" = "debian:10" ]; then
            sudo apt-get update
            sudo apt-get install -y cmake build-essential llvm-14-dev
          elif [ "${{ matrix.distro }}" = "centos:8" ]; then
            sudo yum update -y
            sudo yum install -y cmake gcc-c++ llvm-toolset-14
            source scl_source enable llvm-toolset-14
          elif [ "${{ matrix.distro }}" = "centos:7" ]; then
            sudo yum update -y
            sudo yum install -y cmake gcc-c++ epel-release
            sudo yum install -y https://centos7.iuscommunity.org/ius-release.rpm
            sudo yum install -y llvm-toolset-14-llvm llvm-toolset-14-llvm-devel
            source scl_source enable llvm-toolset-14
          elif [ "${{ matrix.distro }}" = "fedora:34" ] || [ "${{ matrix.distro }}" = "fedora:33" ]; then
            sudo dnf update -y
            sudo dnf install -y cmake gcc-c++ llvm14-devel
          fi
        elif [ "$OSTYPE" = "darwin" ]; then
          brew install cmake llvm@14
        fi
    - name: Build project
      run: |
        sh ./build_scripts/release.sh
        make
    - name: Create release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ matrix.cmake }}-${{ matrix.distro }}-${{ matrix.os }}
        release_name: v${{ matrix.cmake }}-${{ matrix.distro }}-${{ matrix.os }} binaries
        draft: false
        prerelease: false
    - name: Upload binaries
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/Release
        asset_name: snowball-${{ matrix.cmake }}-${{ matrix.distro }}-${{ matrix.os }}
        asset_content_type: application/octet-stream