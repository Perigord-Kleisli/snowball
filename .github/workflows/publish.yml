name: Build and Release
on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.DIST }}
    strategy:
      matrix:
        include:
          - ARCH: 'x86_64'
            DIST: 'ubuntu-20.04'
          - ARCH: 'aarch64'
            DIST: 'ubuntu-20.04'
          - ARCH: 'arm64'
            DIST: 'macos-11'
          # - ARCH: 'x86_64'
          #   DIST: 'windows-latest'
          # - ARCH: 'i386'
          #   DIST: 'ubuntu-20.04'
    name: Build ${{ matrix.DIST }}  (${{ matrix.ARCH }})
    env:
      DIST: ${{ matrix.DIST }}
      ARCH: ${{ matrix.ARCH }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU integration for Docker
        run: |
          if [[ "$OSTYPE" != "darwin"* ]]; then
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          else

      - name: Build in Docker
        run: bash -ex build_scripts/release_build.sh

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload Release Asset
        if: success()
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ./snowball-${{ matrix.DIST == 'ubuntu-20.04' && 'linux' || 'darwin' }}-${{ matrix.ARCH }}.tar.gz
          asset_name: snowball-${{ matrix.DIST == 'ubuntu-20.04' && 'linux' || 'darwin' }}-${{ matrix.ARCH }}.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
